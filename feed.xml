<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>30 Dias de Vim</title>
    <description>Esto es un ejercicio para obligarme a usar nuevas y mas avanzadas funciones en vim. Durante 30 dias usare vim y aqui estara publicado mi progreso.</description>
    <link>http:robls.github.io/30diasvim/</link>
    <atom:link href="http:robls.github.io/30diasvim/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Sat, 19 Jul 2014 10:10:10 -0500</pubDate>
    <lastBuildDate>Sat, 19 Jul 2014 10:10:10 -0500</lastBuildDate>
    <generator>Jekyll v2.1.0</generator>
    
      <item>
        <title>Dia 6. Copiar y Pegar</title>
        <description>&lt;p&gt;Ya conocemos los comandos para copiar y pegar, &lt;code&gt;y&lt;/code&gt;, &lt;code&gt;p&lt;/code&gt;. Pero que pasa cuando queremos copiar mas de una linea o bloque de código.&lt;/p&gt;

&lt;p&gt;Aquí entra el modo VISIAL, &lt;code&gt;v&lt;/code&gt; con este comando entramos en modo visual, podemos notarlo en la barra de estado indicandosnos “– VISUAL –” o algo asi.&lt;/p&gt;

&lt;p&gt;Ahora con el comando &lt;code&gt;V&lt;/code&gt; entramos en modo visual por lineas, lo cual es conveniente cuando queremos borra, copiar, o lo seleccionar por lineas.&lt;/p&gt;

&lt;p&gt;Entonces si queremos copiar un bloque de 5 leneas de en el archivo, entramos en modo visual y nos desplazamos 5 lineas. Después podemos borrar o copiar, y pegarlo donde nos de la gana.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;V
5j
d
kkkkkkkkkkkkkkk ... o 22k
p
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Listo ya copiamos y pegamos un bloque de 5 lineas. &lt;/p&gt;

&lt;p&gt;Ya podemos copiar y pegar por palabras y ahora por bloques.&lt;/p&gt;

&lt;h2 id=&quot;dia-6&quot;&gt;Dia 6&lt;/h2&gt;

&lt;p&gt;Bien con esto queda, espero, mas claro eso de copiar y pegar. Con el tiempo espero, que lleguen quejas diciendo que hay cosas que no coinciden jajaja, ya que es muy probable que me salte algo o que olvide algo. &lt;/p&gt;
</description>
        <pubDate>Sat, 19 Jul 2014 00:00:00 -0500</pubDate>
        <link>http:robls.github.io/30diasvim/Dia6-CyP.html</link>
        <guid isPermaLink="true">http:robls.github.io/30diasvim/Dia6-CyP.html</guid>
        
        
      </item>
    
      <item>
        <title>Dia 5. Al mero estilo Vim</title>
        <description>&lt;p&gt;Ahora toca editar “al mero estilo Vim”, no tengo más introducción.&lt;/p&gt;

&lt;h2 id=&quot;dos-patadas-y-a-editar&quot;&gt;Dos patadas y a editar&lt;/h2&gt;

&lt;p&gt;Ahora las teclas para editar son &lt;code&gt;a&lt;/code&gt; e &lt;code&gt;i&lt;/code&gt;, bueno no son todas. Repito: En Vim todo el teclado hace algo.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;c&lt;/code&gt; El comando c (tecla ‘c’) de “cambiar”. Por ejemplo &lt;code&gt;cw&lt;/code&gt; cambia una palabra y nos deja en modo INSERT.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Hola lundo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Con el puntero sobre “lundo” hacemos, &lt;code&gt;cw&lt;/code&gt; borra la palabra y corregimos.&lt;/p&gt;

&lt;p&gt;Aplica también para &lt;code&gt;c$&lt;/code&gt; Incluso podemos hacer &lt;code&gt;c3$&lt;/code&gt; que nos eliminaría 3 lineas apartide de nuestra posición actual y nos dejaría en modo edición.&lt;/p&gt;

&lt;p&gt;Y si nuestra linea esta completamente mal, para borrarla y editar hay dos formas &lt;code&gt;d$i&lt;/code&gt; o &lt;code&gt;cc&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Es tan natural cuando usas los comandos, por ejemplo &lt;code&gt;d$i&lt;/code&gt; significa: forra hasta el final de la linea y entra en modo edición.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;cc&lt;/code&gt; es lo mismo pero en dos dedazos.&lt;/p&gt;

&lt;p&gt;Por ultimo &lt;code&gt;C&lt;/code&gt; en muchos casos la letra mayúscula del comando tiene una función similar, en el caso de &lt;code&gt;C&lt;/code&gt; indicamos que queremos cambiar el texto hasta el final de la linea. (suponiendo que el puntero esta sobre la ‘e’ después de la coma)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Esto se queda, esto se va.
`C`
Esto se queda, 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Y quedamos en modo INSERT.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;s&lt;/code&gt; Entramos en modo edición “substituyendo” el carácter en la posición actual.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;S&lt;/code&gt; Lo mismo pero aplicado a lineas enteras.&lt;/p&gt;

&lt;p&gt;La función &lt;code&gt;d&lt;/code&gt; toma el mismo comportamiento que &lt;code&gt;c&lt;/code&gt;, ya que podemos eliminar palabras o lineas, también N numero de palabras o N numero de lineas.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;3dw&lt;/code&gt; Borraría 3 palabras a partir de nuestra posición actual. &lt;/p&gt;

&lt;p&gt;Y aquí es donde nos empezamos a sentir cómodos. &lt;code&gt;d$&lt;/code&gt; &lt;code&gt;d0&lt;/code&gt; &lt;code&gt;dd&lt;/code&gt; probablemente ya sea muy muy obvio lo que estos comandos hacen. Borrar al fina, borrar al inicio, borrar la linea completa, respectivamente.&lt;/p&gt;

&lt;h3 id=&quot;pegar&quot;&gt;Pegar&lt;/h3&gt;

&lt;p&gt;Ya mencione el comando &lt;code&gt;p&lt;/code&gt;, ahora solo queda decir que &lt;code&gt;p&lt;/code&gt; pega despues de y &lt;code&gt;P&lt;/code&gt; pega antes de.&lt;/p&gt;

&lt;p&gt;Podemos hacer un &lt;code&gt;3p&lt;/code&gt; y nos pegaría la misma linea 3 veces.&lt;/p&gt;

&lt;h2 id=&quot;por-ultimo&quot;&gt;Por ultimo&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;~&lt;/code&gt; Esa cosa (lol) Nos pasa de mayus a minus. Desde modo normal el carácter sobre el que este el puntero lo cambia, si esta en minúsculo lo pasa a mayúscula y viseverza.&lt;/p&gt;

&lt;h2 id=&quot;dia-5&quot;&gt;Dia 5.&lt;/h2&gt;
&lt;p&gt;Creo que mañana sera algo sobre el modo visual y copias y pegar bloques de texto.
Pues este es el estilo Vim, ese donde el teclado hace todo y no hay un mouse y mucho menos un click y click derecho.&lt;/p&gt;
</description>
        <pubDate>Fri, 18 Jul 2014 00:00:00 -0500</pubDate>
        <link>http:robls.github.io/30diasvim/Dia5-Al-mero-estilo-Vim.html</link>
        <guid isPermaLink="true">http:robls.github.io/30diasvim/Dia5-Al-mero-estilo-Vim.html</guid>
        
        
      </item>
    
      <item>
        <title>Dia 4. Danzarín del agua</title>
        <description>&lt;h2 id=&quot;antes-de-seguir&quot;&gt;Antes de seguir&lt;/h2&gt;

&lt;p&gt;No sé, pero el no tener estructurado lo que va a pasar al día siguiente en este “experimento” me tiene un poco preocupado, primero porque cabe la posibilidad de que repita algo, no una, sino varias veces. Y segundo, que puede que no lleve un buen flujo de conceptos, en una de esas puedo hablar de algo como si ya lo hubiera explicado. Bueno no sé, todo fue tan repentino… Jaja.&lt;/p&gt;

&lt;p&gt;Por el bien de todos espero tomarme un tiempo para estructurar estos 30 días y saber mínimo en que termina…&lt;/p&gt;

&lt;h2 id=&quot;danza-del-agua-as-aria-stark&quot;&gt;Danza del agua (“as Aria Stark”)&lt;/h2&gt;

&lt;p&gt;Bueno ando medio inspirado, por eso el titulo tan cantarino. Aquí el titulo más claro, &lt;code&gt;Moviéndote en vim con pez en el agua&lt;/code&gt; ya se entiende no?… &lt;/p&gt;

&lt;h3 id=&quot;comandos-previos&quot;&gt;Comandos previos&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;a, i, h, j, k, l&lt;/code&gt;  Con estos podemos movernos y entrar en modo edición a partir de la localidad del cursor.&lt;/p&gt;

&lt;h3 id=&quot;chachacha&quot;&gt;1, 2, 3, chachacha&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;w&lt;/code&gt; De la palabra ‘word’ con la tecla w en modo NORMAL avanzamos de palabra en palabra.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;b&lt;/code&gt; De la palabra ‘(Se queda de tarea)’ “avanzamos” de palabra en palabra pero en reversa. :D&lt;/p&gt;

&lt;p&gt;&lt;code&gt;0&lt;/code&gt; Con cero llegamos al inicio de la linea.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$&lt;/code&gt; Con signo de pesos, llegamos al final de la linea.&lt;/p&gt;

&lt;p&gt;Sin importar donde estemos, sobre la linea que estemos, estos dos comandos nos llevan al inicio o al final.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;W&lt;/code&gt; Con w mayúscula (shift+w) avanzamos palabra por palabra pero sin contar puntuaciones.(pasa los mismo con &lt;code&gt;b&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Osea que “hola, que hace?” para llegar de la “h” al “?” cuesta 4 &lt;code&gt;w&lt;/code&gt;, mientras que con &lt;code&gt;W&lt;/code&gt; nos cuesta solo 2. Con esto espero quede un poco más claro la diferencia entre w-W y b-B.&lt;/p&gt;

&lt;h3 id=&quot;los-nmeros&quot;&gt;Los números&lt;/h3&gt;
&lt;p&gt;Podemos usar los números del teclado para indicar el numero de veces que queremos repetir ‘X’ comando.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;4w&lt;/code&gt; Avanzaría 4 palabras adelante.
&lt;code&gt;2j&lt;/code&gt; Bajaría 2 lineas.&lt;/p&gt;

&lt;p&gt;Esto aplica para cualquier comando que quepa en la razón de: “Me puedes ejecutar N veces”. Y de momento creo que todos cumplen.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;4$&lt;/code&gt; Nos llevaría 4 lineas abajo, al final de la linea. o:. Con el 0 no entiendo como funciona.&lt;/p&gt;

&lt;h2 id=&quot;dia-4&quot;&gt;Dia 4&lt;/h2&gt;
&lt;p&gt;Ya podemos movernos de forma mas eficiente entre el texto. Practicando entenderemos mejor como funcionan estos comandos. Ah! &lt;code&gt;b&lt;/code&gt; es por backward. ;)&lt;/p&gt;
</description>
        <pubDate>Thu, 17 Jul 2014 00:00:00 -0500</pubDate>
        <link>http:robls.github.io/30diasvim/Dia4-Dazarin-del-agua.html</link>
        <guid isPermaLink="true">http:robls.github.io/30diasvim/Dia4-Dazarin-del-agua.html</guid>
        
        
      </item>
    
      <item>
        <title>Dia 3. Ayuda</title>
        <description>&lt;p&gt;Empecemos a usar vim como nuestro editor por default, para seguir aprendiendo deberiamos usar vim como la primer opcion para editar cualquier archivo de texto. &lt;/p&gt;

&lt;p&gt;Como programador edito desde mis archivos de configuracion, hasta los post de este proyecto. Ya estoy acostumbrado a abrir la linea de comandos y ejecutar vim. &lt;/p&gt;

&lt;p&gt;Lo importantese es sentirse comodo.&lt;/p&gt;

&lt;h2 id=&quot;el-archivo-vimrc&quot;&gt;El archivo vimrc&lt;/h2&gt;

&lt;p&gt;Ayer olvide agregar una linea en este archivo, al momento de programar nos ayuda a resaltar mejor la sintaxis y dependiendo de los gustos:&lt;/p&gt;

&lt;p&gt;colorscheme evening&lt;/p&gt;

&lt;p&gt;Con esta linea en el archivo de configuracion tenemos un nuevo esquema de colores para la sintaxis. &lt;/p&gt;

&lt;h2 id=&quot;ayuda&quot;&gt;Ayuda&lt;/h2&gt;

&lt;p&gt;Ya tenemos funciones basicas y configuracion basica. Y para comprobar todo esto podemos usar el sistema de ayuda de vim.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;:help colorscheme
:help help
:help
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Podemos probar con algunas de las configuraciones que tenemos en el archivo vimrc o con los simples comandos del teclado.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;:help j
:help x
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;dia-3&quot;&gt;Dia 3&lt;/h2&gt;
&lt;p&gt;Lo importante es que comprender y estar seguros de que estamos haciendo. Es parte importante para comprender Vim, y para sentirse comodo cuandlo usamos.&lt;/p&gt;
</description>
        <pubDate>Wed, 16 Jul 2014 00:00:00 -0500</pubDate>
        <link>http:robls.github.io/30diasvim/Dia3-Ayuda.html</link>
        <guid isPermaLink="true">http:robls.github.io/30diasvim/Dia3-Ayuda.html</guid>
        
        
      </item>
    
      <item>
        <title>Dia 2. Configuración</title>
        <description>&lt;h2 id=&quot;el-archivo-vimrc&quot;&gt;El archivo vimrc&lt;/h2&gt;

&lt;p&gt;Como todo vim tiene un archivo de configuración del que toma ciertos parámetros para su comportamiento.&lt;/p&gt;

&lt;p&gt;El archivo vimrc por lo regular se crea en el home de nuestro usuario: &lt;code&gt;/home/rob/.vimrc&lt;/code&gt; En este archivo tendremos nuestra configuración. &lt;/p&gt;

&lt;h2 id=&quot;configuracion&quot;&gt;Configuracion&lt;/h2&gt;
&lt;p&gt;Para que lo siguientes ejemplos sean permanentes deberían estar linea por linea en el archivo ‘.vimrc’. También los podemos cambiar en cada sección de vim en forma de comando &lt;code&gt;:set nu&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;general&quot;&gt;General&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;set history=999&lt;/code&gt; Es el numero de lineas que guardara el historial de vim.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;set autoread&lt;/code&gt; Cuando tenemos un archivo en vim y se modifica desde fuera esta opción detectara los cambios.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;set encoding=utf8&lt;/code&gt; Activamos utf8 por default.&lt;/p&gt;

&lt;h3 id=&quot;interfaz&quot;&gt;Interfaz&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;set ruler&lt;/code&gt; Con esto veremos la posición del puntero en formato de ‘linea,columna’.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;set cmdheight=2&lt;/code&gt; Esto define le numero de lineas para la parte de comandos,2 renglones es bueno ;).&lt;/p&gt;

&lt;p&gt;&lt;code&gt;set ignorecase&lt;/code&gt; Para las búsquedas ignora mayúsculas de minúsculas&lt;/p&gt;

&lt;p&gt;&lt;code&gt;set hlsearch&lt;/code&gt; Para que resalten las coincidencias al buscar.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;set showmatch&lt;/code&gt; Muestra los pares de llaves ‘{‘ ‘}’, cuando el puntero esta sobre alguna.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;syntax enable&lt;/code&gt; Marcado de sintaxis activado.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;set nu&lt;/code&gt; Abilita el numero para cada linea.&lt;/p&gt;

&lt;h3 id=&quot;archivos-y-respaldos&quot;&gt;Archivos y respaldos&lt;/h3&gt;
&lt;p&gt;Vim genera respaldos y archivos swap, por seguridad e incomodidad los apagamos.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;set nobackup&lt;/code&gt; Apagamos los respaldos.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;set nowb&lt;/code&gt; La abreviación de NoWriteBackup.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;set noswapfile&lt;/code&gt; Apagamos los archivos swap.&lt;/p&gt;

&lt;h3 id=&quot;texto-tabulador-e-indentado&quot;&gt;Texto, tabulador e indentado&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;set expandtab&lt;/code&gt; Cambia tabuladores por espacios.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;set tabstop=2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;set shiftwidth=2&lt;/code&gt; Indicamos el numero de espacios por cada tab. Aqui depende de gusto y entandares según tu lenguaje.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;set ai&lt;/code&gt; Auto indentado&lt;/p&gt;

&lt;p&gt;&lt;code&gt;set si&lt;/code&gt; Smart indent, identado inteligente ;)&lt;/p&gt;

&lt;p&gt;&lt;code&gt;set wrap&lt;/code&gt; Con esta opción activa, las lineas mas largas al tamaño de la ventana “caen al siguiente renglón”. NO GENERAN UNA NUEVA LINEA. (Esto se ve mas claro cuando tenemos activado el numerado por linea.&lt;/p&gt;

&lt;h3 id=&quot;barra-de-estado&quot;&gt;Barra de estado&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;set laststatus=2&lt;/code&gt; Para que siempre muestre la barra.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;set statusline=\ %F%m%r%h\ %w\ \ CWD:\ %r%{getcwd()}%h\ \ \ Lin:\ %l\ \ \ Col:\ %c&lt;/code&gt;
Con esto mostramos la barra de estado inflación importante, como el archivo, el directorio y la posición actual. &lt;/p&gt;

&lt;h2 id=&quot;dia-2&quot;&gt;Dia 2.&lt;/h2&gt;

&lt;p&gt;Con esto ya tenemos un vim más “chingon” al momento de trabajar. Para mas configuraciones podemos buscar en google, mucha gente comparte sus .vimrc.
Creo que estas configuraciones son generales y básicas para trabajar con vim de forma más cómoda. Ya veré que otras cosas encuentro para añadir al .vimrc&lt;/p&gt;
</description>
        <pubDate>Tue, 15 Jul 2014 00:00:00 -0500</pubDate>
        <link>http:robls.github.io/30diasvim/Dia2-Configuracion.html</link>
        <guid isPermaLink="true">http:robls.github.io/30diasvim/Dia2-Configuracion.html</guid>
        
        
      </item>
    
      <item>
        <title>Dia 1. Basicos en Vim</title>
        <description>&lt;p&gt;No voy a empezar por una instalación de vim, entonces ya deberías tener un vim en tu maquina, en caso que no lo tengas, a instalar!.&lt;/p&gt;

&lt;p&gt;Otra cosa, uso linux, no se como sean estas cosas en windows y en mac debería de ser lo mismo ( o casi lo mismo :).&lt;/p&gt;

&lt;p&gt;Por ultimo, ‘$’ ese signo significa un comando desde terminal, ‘:’ los dos puntos significan un comando desde vim.&lt;/p&gt;

&lt;h2 id=&quot;ligera-introduccin&quot;&gt;Ligera Introducción&lt;/h2&gt;
&lt;p&gt;Vim es un editor de texto, corre perron desde tu shell, aunque también hay GUIs para el que no quiera usar el shell. En vim todo tu teclado es una función (acción). Así que cuidado, dos dedazos o con menos y uno puede hacer cosas, muchas cosas. Bueno ya con eso.&lt;/p&gt;

&lt;p&gt;Ya con el paso de los días veremos que pasa.&lt;/p&gt;

&lt;h2 id=&quot;edicin-en-vim&quot;&gt;Edición en Vim&lt;/h2&gt;

&lt;p&gt;Vamos a editar archivos, desde terminal.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$vim archivo1.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Con esto ya tenemos el archivo cargado en vim y claro vim.&lt;/p&gt;

&lt;h3 id=&quot;modos-en-vim&quot;&gt;Modos en Vim&lt;/h3&gt;
&lt;p&gt;Insertar o Edición.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;i&lt;/code&gt; Esto nos deja en modo edición justo donde este el puntero.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;a&lt;/code&gt; Este nos deja en modo edición un carácter adelante del puntero.&lt;/p&gt;

&lt;h3 id=&quot;modo-visual&quot;&gt;Modo Visual.&lt;/h3&gt;
&lt;p&gt;Como vim por default no habilita el mouse no podemos seleccionar texto a no ser que estemos en modo visial.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;v&lt;/code&gt; Selecciona carácter por carácter.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;V&lt;/code&gt; Selecciona lineas completas.&lt;/p&gt;

&lt;h3 id=&quot;modo-normal&quot;&gt;Modo Normal.&lt;/h3&gt;
&lt;p&gt;Por default es el modo en el que inicia vim. en este modo podemos movernos a través del archivo y aplicar funciones y comandos.
&lt;code&gt;esc&lt;/code&gt; Si estas en modo INSERTAR o VISUAL presionas ESC y regresas al modo normal.&lt;/p&gt;

&lt;h3 id=&quot;moviendo-el-puntero&quot;&gt;Moviendo el puntero.&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;h, j, k, l&lt;/code&gt; izq, abajo, arriba, derecha.
Respectivamente.&lt;/p&gt;

&lt;h3 id=&quot;copiar-y-pegar&quot;&gt;Copiar y Pegar.&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;y&lt;/code&gt; Copiar&lt;/p&gt;

&lt;p&gt;&lt;code&gt;p&lt;/code&gt; Pegar&lt;/p&gt;

&lt;p&gt;Al principio el comportamiento de pegar puede ser extraño. Pero con practica lo dominas.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;yy&lt;/code&gt; Dos veces ‘y’ y haz copiado la linea entera.&lt;/p&gt;

&lt;h3 id=&quot;undo-y--redo&quot;&gt;Undo y  Redo.&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;u&lt;/code&gt; Undo.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;CTRL+r&lt;/code&gt; redo.&lt;/p&gt;

&lt;p&gt;Creo que es mas claro decir UNDO y REDO que hacer y deshacer o rehacer o lo que sea…&lt;/p&gt;

&lt;h3 id=&quot;reemplazar&quot;&gt;Reemplazar&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;r&lt;/code&gt; Reemplaza el carácter del puntero por el siguiente presionado.&lt;/p&gt;

&lt;p&gt;Ej. ‘borror’ Para cambiar la segunda ‘o’ por ‘a’ deberíamos hacer (con el puntero sobre la segunda ‘o’: &lt;code&gt;ra&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;guardar-archivos&quot;&gt;Guardar Archivos&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;:w&lt;/code&gt; En modo normal, presionamos ‘:’ seguido de ‘w’ + ENTER y listo nuestros cambios se han guardado.&lt;/p&gt;

&lt;h2 id=&quot;salir&quot;&gt;Salir&lt;/h2&gt;
&lt;p&gt;Por ultimo cuando terminamos de trabajar el archivo, salimos con el comando ‘q’
&lt;code&gt;:q&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;entonces&quot;&gt;Entonces&lt;/h2&gt;
&lt;p&gt;Que pasa si &lt;code&gt;:wq&lt;/code&gt; ?&lt;/p&gt;

&lt;p&gt;Que pasa si &lt;code&gt;yyp&lt;/code&gt; ?&lt;/p&gt;

&lt;h2 id=&quot;comandos-extras&quot;&gt;Comandos Extras&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;A&lt;/code&gt; Entra en modo edicion al final de la linia.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;I&lt;/code&gt; Entra en modo edicion al inicio de la linia.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;R&lt;/code&gt; Entra en modo Reemplasar.&lt;/p&gt;

&lt;h2 id=&quot;dia-1&quot;&gt;Dia 1&lt;/h2&gt;

&lt;p&gt;Fin del dia 1, son cosas muy básicas, asi empezamos todos.&lt;/p&gt;
</description>
        <pubDate>Mon, 14 Jul 2014 00:00:00 -0500</pubDate>
        <link>http:robls.github.io/30diasvim/Dia1-Basicos.html</link>
        <guid isPermaLink="true">http:robls.github.io/30diasvim/Dia1-Basicos.html</guid>
        
        
      </item>
    
  </channel>
</rss>
